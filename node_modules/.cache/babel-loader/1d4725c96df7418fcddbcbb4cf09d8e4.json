{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hannah/Desktop/github projects/react-tetris/src/components/Hold.js\";\nimport React from 'react';\nimport { StyledHold } from './styles/StyledHold';\nimport { StyledStage } from './styles/StyledStage';\nimport Cell from './Cell';\n\nconst Hold = ({\n  tet,\n  text\n}) => /*#__PURE__*/_jsxDEV(StyledHold, {\n  children: [console.log(tet), /*#__PURE__*/_jsxDEV(StyledStage, {\n    width: tet.length,\n    height: tet.length,\n    children: tet.tetromino.map(row => row.map((cell, x) => /*#__PURE__*/_jsxDEV(Cell, {\n      type: cell[0]\n    }, x, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 60\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 5\n}, this);\n\n_c = Hold;\nexport default Hold;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hold\");","map":{"version":3,"sources":["/Users/hannah/Desktop/github projects/react-tetris/src/components/Hold.js"],"names":["React","StyledHold","StyledStage","Cell","Hold","tet","text","console","log","length","tetromino","map","row","cell","x"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,qBAAzB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAD,kBACT,QAAC,UAAD;AAAA,aACKC,OAAO,CAACC,GAAR,CAAYH,GAAZ,CADL,eAEI,QAAC,WAAD;AAAa,IAAA,KAAK,EAAEA,GAAG,CAACI,MAAxB;AAAgC,IAAA,MAAM,EAAEJ,GAAG,CAACI,MAA5C;AAAA,cACKJ,GAAG,CAACK,SAAJ,CAAcC,GAAd,CAAkBC,GAAG,IAAIA,GAAG,CAACD,GAAJ,CAAQ,CAACE,IAAD,EAAOC,CAAP,kBAAa,QAAC,IAAD;AAAc,MAAA,IAAI,EAAED,IAAI,CAAC,CAAD;AAAxB,OAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,YAArB,CAAzB;AADL;AAAA;AAAA;AAAA;AAAA,UAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMV,I;AASN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport {StyledHold} from './styles/StyledHold';\nimport {StyledStage} from './styles/StyledStage';\nimport Cell from './Cell';\n\nconst Hold = ({tet, text}) => (\n    <StyledHold> \n        {console.log(tet)}\n        <StyledStage width={tet.length} height={tet.length}>\n            {tet.tetromino.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n        </StyledStage>\n    </StyledHold>\n)\n\nexport default Hold;"]},"metadata":{},"sourceType":"module"}