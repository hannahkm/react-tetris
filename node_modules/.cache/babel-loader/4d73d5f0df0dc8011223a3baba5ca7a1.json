{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hannah/Desktop/github projects/react-tetris/src/components/Tetris.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { createStage } from '../gameHelpers'; //Components\n\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton'; //Styled Components\n\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'; //Custon Hooks\n\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\n\nconst Tetris = () => {\n  _s();\n\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player] = usePlayer();\n  const [stage, setStage] = useStage(player);\n  console.log(\"re-render\");\n\n  const movePlayer = dir => {};\n\n  const startGame = () => {};\n\n  const drop = () => {};\n\n  const dropPlayer = () => {};\n\n  const move = ({\n    keyCode\n  }) => {};\n\n  return /*#__PURE__*/_jsxDEV(StyledTetrisWrapper, {\n    children: /*#__PURE__*/_jsxDEV(StyledTetris, {\n      children: [/*#__PURE__*/_jsxDEV(Stage, {\n        stage: stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [gameOver ? /*#__PURE__*/_jsxDEV(Display, {\n          gameOver: gameOver,\n          text: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Display, {\n            text: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: \"Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StartButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tetris, \"seKlr7bO340VRWlQWNLItWGrOOg=\", false, function () {\n  return [usePlayer, useStage];\n});\n\n_c = Tetris;\nexport default Tetris;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tetris\");","map":{"version":3,"sources":["/Users/hannah/Desktop/github projects/react-tetris/src/components/Tetris.js"],"names":["React","useState","createStage","Stage","Display","StartButton","StyledTetrisWrapper","StyledTetris","usePlayer","useStage","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","stage","setStage","console","log","movePlayer","dir","startGame","drop","dropPlayer","move","keyCode"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,QAA0B,gBAA1B,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;;AACA,SAAQC,mBAAR,EAA6BC,YAA7B,QAAgD,uBAAhD,C,CAEA;;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,SAAQC,QAAR,QAAuB,mBAAvB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACc,MAAD,IAAWP,SAAS,EAA1B;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACM,MAAD,CAAlC;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AAEA,QAAMC,UAAU,GAAGC,GAAG,IAAI,CAEzB,CAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAIA,QAAMC,IAAI,GAAG,MAAM,CAElB,CAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM,CAExB,CAFD;;AAIA,QAAMC,IAAI,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAe,CAE3B,CAFD;;AAIA,sBACI,QAAC,mBAAD;AAAA,2BACI,QAAC,YAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEV;AAAd;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,mBACKH,QAAQ,gBACL,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAIA,QAArB;AAA+B,UAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,gBADK,gBAGL;AAAA,kCACI,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJR,eAUI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAhDD;;GAAMH,M;UAIeF,S,EACSC,Q;;;KALxBC,M;AAkDN,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react';\nimport {createStage} from '../gameHelpers';\n\n//Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\n//Styled Components\nimport {StyledTetrisWrapper, StyledTetris} from './styles/StyledTetris';\n\n//Custon Hooks\nimport {usePlayer} from '../hooks/usePlayer';\nimport {useStage} from '../hooks/useStage';\n\nconst Tetris = () => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n\n    const [player] = usePlayer();\n    const [stage, setStage] = useStage(player);\n\n    console.log(\"re-render\");\n\n    const movePlayer = dir => {\n\n    }\n\n    const startGame = () => {\n\n    }\n\n    const drop = () => {\n\n    }\n\n    const dropPlayer = () => {\n\n    }\n\n    const move = ({keyCode}) => {\n        \n    }\n\n    return (\n        <StyledTetrisWrapper>\n            <StyledTetris>\n                <Stage stage={stage}/>\n                <aside> \n                    {gameOver ? (\n                        <Display gameOver = {gameOver} text=\"Game Over\" />\n                    ) : (\n                        <div>\n                            <Display text=\"Score\"/>\n                            <Display text=\"Rows\"/>\n                            <Display text=\"Level\"/>\n                        </div>\n                    )}\n                    <StartButton />\n                </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    )\n}\n\nexport default Tetris;"]},"metadata":{},"sourceType":"module"}