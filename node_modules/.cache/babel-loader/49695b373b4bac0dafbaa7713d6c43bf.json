{"ast":null,"code":"export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\nexport const createStage = () => Array.from(Array(STAGE_HEIGHT), () => new Array(STAGE_WIDTH).fill([0, 'clear']));\nexport const checkCollision = (player, stage, {\n  x: moveX,\n  y: moveY\n}) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[0].length; x += 1) {\n      // Check if the cell is 0 or filled\n      if (player.tetromino[y][x] != 0) {// Check if movement is within the game's height\n        // Check if movement is within the game's width\n        // Check if the cell is set to clear\n      } //\n\n    }\n  }\n};","map":{"version":3,"sources":["/Users/hannah/Desktop/github projects/react-tetris/src/gameHelpers.js"],"names":["STAGE_WIDTH","STAGE_HEIGHT","createStage","Array","from","fill","checkCollision","player","stage","x","moveX","y","moveY","tetromino","length"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,EAApB;AACP,OAAO,MAAMC,YAAY,GAAG,EAArB;AAEP,OAAO,MAAMC,WAAW,GAAG,MACvBC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACF,YAAD,CAAhB,EAAgC,MAC5B,IAAIE,KAAJ,CAAUH,WAAV,EAAuBK,IAAvB,CAA4B,CAAC,CAAD,EAAI,OAAJ,CAA5B,CADJ,CADG;AAKP,OAAO,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgB;AAACC,EAAAA,CAAC,EAAEC,KAAJ;AAAWC,EAAAA,CAAC,EAAEC;AAAd,CAAhB,KAAyC;AACnE,OAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACM,SAAP,CAAiBC,MAArC,EAA6CH,CAAC,IAAI,CAAlD,EAAoD;AAChD,SAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBC,MAAxC,EAAgDL,CAAC,IAAI,CAArD,EAAuD;AACnD;AACA,UAAIF,MAAM,CAACM,SAAP,CAAiBF,CAAjB,EAAoBF,CAApB,KAA0B,CAA9B,EAAgC,CAC5B;AAEA;AAEA;AACH,OARkD,CASnD;;AACH;AACJ;AAEJ,CAfM","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () => \n    Array.from(Array(STAGE_HEIGHT), () =>\n        new Array(STAGE_WIDTH).fill([0, 'clear'])\n    );\n\nexport const checkCollision = (player, stage, {x: moveX, y: moveY}) => {\n    for (let y = 0; y < player.tetromino.length; y += 1){\n        for (let x = 0; x < player.tetromino[0].length; x += 1){\n            // Check if the cell is 0 or filled\n            if (player.tetromino[y][x] != 0){\n                // Check if movement is within the game's height\n\n                // Check if movement is within the game's width\n\n                // Check if the cell is set to clear\n            }\n            //\n        }\n    }\n\n}"]},"metadata":{},"sourceType":"module"}