{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { randomTetromino } from '../tetrominos';\nexport const usePlayer = () => {\n  _s();\n\n  const [player, setPlayer] = useState({\n    pos: {\n      x: 0,\n      y: 0\n    },\n    tetromino: randomTetromino().shape,\n    collideed: false\n  });\n\n  const updatePlayerPos = ({\n    x,\n    y,\n    collided\n  }) => {\n    setPlayer(prev => ({ ...prev,\n      pos: {\n        x: prev.pos.x += x,\n        y: prev.pos.y += y\n      },\n      collided\n    }));\n  };\n\n  return [player];\n};\n\n_s(usePlayer, \"JbBuNw/vUXqy4L/vNCKoU9RQmlI=\");","map":{"version":3,"sources":["/Users/hannah/Desktop/github projects/react-tetris/src/hooks/usePlayer.js"],"names":["useState","randomTetromino","usePlayer","player","setPlayer","pos","x","y","tetromino","shape","collideed","updatePlayerPos","collided","prev"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAEA,SAAQC,eAAR,QAA8B,eAA9B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC;AACjCK,IAAAA,GAAG,EAAE;AAACC,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KAD4B;AAEjCC,IAAAA,SAAS,EAAEP,eAAe,GAAGQ,KAFI;AAGjCC,IAAAA,SAAS,EAAE;AAHsB,GAAD,CAApC;;AAMA,QAAMC,eAAe,GAAG,CAAC;AAACL,IAAAA,CAAD;AAAIC,IAAAA,CAAJ;AAAOK,IAAAA;AAAP,GAAD,KAAsB;AAC1CR,IAAAA,SAAS,CAACS,IAAI,KAAK,EACf,GAAGA,IADY;AAEfR,MAAAA,GAAG,EAAE;AAACC,QAAAA,CAAC,EAAGO,IAAI,CAACR,GAAL,CAASC,CAAT,IAAcA,CAAnB;AAAuBC,QAAAA,CAAC,EAAGM,IAAI,CAACR,GAAL,CAASE,CAAT,IAAcA;AAAzC,OAFU;AAGfK,MAAAA;AAHe,KAAL,CAAL,CAAT;AAKH,GAND;;AAQA,SAAO,CAACT,MAAD,CAAP;AAEH,CAjBM;;GAAMD,S","sourcesContent":["import {useState} from 'react';\n\nimport {randomTetromino} from '../tetrominos';\n\nexport const usePlayer = () => {\n    const [player, setPlayer] = useState({\n        pos: {x: 0, y: 0},\n        tetromino: randomTetromino().shape,\n        collideed: false,\n    });\n\n    const updatePlayerPos = ({x, y, collided}) => {\n        setPlayer(prev => ({\n            ...prev,\n            pos: {x: (prev.pos.x += x), y: (prev.pos.y += y)},\n            collided,\n        }))\n    }\n\n    return [player];\n\n}"]},"metadata":{},"sourceType":"module"}