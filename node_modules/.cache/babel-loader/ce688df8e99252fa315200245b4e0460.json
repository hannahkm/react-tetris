{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { createHold } from '../gameHelpers';\nexport const useHold = (player, resetPlayer) => {\n  _s();\n\n  console.log(player);\n  const [hold, setHold] = useState(createHold(player.tetromino.shape.length, player.tetromino.shape.length));\n  useEffect(() => {\n    const updateHold = prevHold => {\n      //Flush stage - reset and rebuild\n      const newHold = prevHold.map(row => row.map(cell => cell[1] === [0, 'clear'])); //Draw tetromino\n\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newHold[y][x] = [value, 'clear'];\n          }\n        });\n      });\n      return newHold;\n    };\n\n    setHold(prev => updateHold(prev));\n  }, [player]);\n  return [hold, setHold];\n};\n\n_s(useHold, \"2CF6CqOVNzwkuIczEUsOLHd0LRI=\");","map":{"version":3,"sources":["/Users/hannah/Desktop/github projects/react-tetris/src/hooks/useHold.js"],"names":["useState","useEffect","createHold","useHold","player","resetPlayer","console","log","hold","setHold","tetromino","shape","length","updateHold","prevHold","newHold","map","row","cell","forEach","y","value","x","prev"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,MAAD,EAASC,WAAT,KAAyB;AAAA;;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,QAAK,CAACI,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACE,UAAU,CAACE,MAAM,CAACM,SAAP,CAAiBC,KAAjB,CAAuBC,MAAxB,EAAgCR,MAAM,CAACM,SAAP,CAAiBC,KAAjB,CAAuBC,MAAvD,CAAX,CAA/B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,UAAU,GAAGC,QAAQ,IAAI;AAC3B;AACA,YAAMC,OAAO,GAAGD,QAAQ,CAACE,GAAT,CAAaC,GAAG,IAC5BA,GAAG,CAACD,GAAJ,CAAQE,IAAI,IAAKA,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAC,CAAD,EAAI,OAAJ,CAA7B,CADY,CAAhB,CAF2B,CAM3B;;AACAd,MAAAA,MAAM,CAACM,SAAP,CAAiBS,OAAjB,CAAyB,CAACF,GAAD,EAAMG,CAAN,KAAY;AACjCH,QAAAA,GAAG,CAACE,OAAJ,CAAY,CAACE,KAAD,EAAQC,CAAR,KAAc;AACtB,cAAID,KAAK,KAAK,CAAd,EAAgB;AACZN,YAAAA,OAAO,CAACK,CAAD,CAAP,CAAWE,CAAX,IAAgB,CAACD,KAAD,EAAQ,OAAR,CAAhB;AACH;AACJ,SAJD;AAKH,OAND;AAQA,aAAON,OAAP;AACH,KAhBD;;AAkBAN,IAAAA,OAAO,CAACc,IAAI,IAAIV,UAAU,CAACU,IAAD,CAAnB,CAAP;AACH,GApBQ,EAoBN,CAACnB,MAAD,CApBM,CAAT;AAsBA,SAAO,CAACI,IAAD,EAAOC,OAAP,CAAP;AACH,CA3BM;;GAAMN,O","sourcesContent":["import {useState, useEffect} from 'react';\nimport {createHold} from '../gameHelpers';\n\nexport const useHold = (player, resetPlayer) => {\n    console.log(player);\n    const[hold, setHold] = useState(createHold(player.tetromino.shape.length, player.tetromino.shape.length));\n\n    useEffect(() => {\n        const updateHold = prevHold => {\n            //Flush stage - reset and rebuild\n            const newHold = prevHold.map(row => \n                row.map(cell => (cell[1] === [0, 'clear']))\n            );\n\n            //Draw tetromino\n            player.tetromino.forEach((row, y) => {\n                row.forEach((value, x) => {\n                    if (value !== 0){\n                        newHold[y][x] = [value, 'clear']; \n                    }\n                });\n            });\n\n            return newHold;\n        };\n\n        setHold(prev => updateHold(prev))\n    }, [player]);\n\n    return [hold, setHold]; \n}"]},"metadata":{},"sourceType":"module"}